_______________________________________________________________

TEXTURE.PAS Accompanies "Mimicking Mountains," by Tom Jeffery, 
BYTE, December 1987, page 337
______________________________________________________________

program textures; const  size = 64; var  srf : array[0..size, 0..size] of longint;  ans : string[30];  srfile : file of longint;  col, row : longint; procedure SetUpDrawing;  var   R : Rect; begin  HideAll;  SetRect(R, 0, 38, 511, 341);  SetDrawingRect(R);  ShowDrawing end; procedure paintpt (row, col : longint);  var   pt, pt2 : point;   rct : rect; begin  pt.v := row;  pt.h := col;  pt2.v := row + 1;  pt2.h := col + 1;  rct.topleft := pt;  rct.botright := pt2;  paintrect(rct); end; procedure CoastDisp;{Displays coastline}  var   col, row, int : longint; begin  for row := 0 to size do   for col := 0 to size do    begin     if srf[row, col] > 0 then      penpat(black)     else      penpat(white);     paintpt(row, col);    end; end; procedure StripeDisp;{Displays stripes for heights defined by int}  var   col, row, int : longint; begin  write('Interval?');  readln(int);  if int > 0 then   begin    for row := 0 to size do     for col := 0 to size do      begin       if odd(srf[row, col] div int) then        penpat(black)       else        penpat(white);       paintpt(row, col);      end;   end; end; procedure TopoDisp;{Displays contours separated by int}  var   col, row, int : longint; begin  write('Interval?');  readln(int);  if int > 0 then   begin    for row := 0 to size - 1 do     for col := 0 to size - 1 do      begin       if ((srf[row, col] div int) = (srf[row, col + 1] div int)) and ((srf[row, col] div int) = (srf[row + 1, col] div int)) then        penpat(white)       else        penpat(black);       paintpt(row, col);      end;   end; end; procedure GrainDisp;{Displays wood grain, grain spacing: int}  var   col, row, int, res, sp, drk, gr, lt : longint; begin  write('Interval?');  readln(int);  if int > 0 then   begin    sp := int div 7;    drk := sp * 2;    gr := sp * 3;    lt := sp * 4;    for row := 0 to size do     for col := 0 to size do      begin       res := srf[row, col] mod int;       if res < sp then        penpat(black)       else if res < drk then        penpat(dkgray)       else if res < gr then        penpat(gray)       else if res < lt then        penpat(ltgray)       else        penpat(white);       paintpt(row, col);      end;   end; end;begin open(srfile, oldfileName('Surface File')); for row := 0 to size do  for col := 0 to size do   read(srfile, srf[row, col]); close(srfile); setorigin(-10, -10); write('(c)oastline, (s)tripe, (t)opo, (g)rain, or (q)uit?'); readln(ans); repeat  if ans[1] = 'c' then   coastdisp  else if ans[1] = 's' then   stripedisp  else if ans[1] = 't' then   topodisp  else if ans[1] = 'g' then   graindisp;  write('Save?');  readln(ans);  if ans[1] = 'y' then   begin    write('Filename?');    readln(ans);    savedrawing(ans);   end;  write('(c)oastline, (s)tripe, (t)opo, (g)rain, or (q)uit?');  readln(ans); until ans[1] = 'q';end.